COMP SCI 2XB3	
Justin Staples
001052815

March 26th, 2017:
	The attest to the fact that the work that I am submitting is my own individual work.
	
Design Decisions:

- I used a brute force method to read in the longitude and latitude of the cities. I orinally
had a better implementation that ran in linear time that used the names of the cities attached
to each restaurant but was having a lot of issues with certain cities being spelled incorrectly
or differently so I just switched to using the coordinates to determine if a restaurant was
within range of a certain city. 

- My testing suite runs two test classes. 1 for bfs and 1 for dfs. In both of these classes,
I check each element in the marked array to show that each city has been examined during the 
search. I also do another test where I iterate through all the edges in the output path, and do 
a check to show that all of those edges do indeed exist in the graph, making that path valid.

- I used a few data structures from the Sedgewick/Wayne algorithms textbook. The following classes
were used from their libraries:

Bag
IndexMinPQ
Queue
ST
Stack

- I also used their implementations of bfs, dfs, and Dijkstra's shortest path as a guide for 
creating my own. My implementation is based off of theirs, but adapted to suit the needs of
this assignment. 

- If you would like to run the program again, go to the class called Program and run the main 
method in that class. Everything, except the testing is done from inside this main method.